<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="userMapping">
	
    <!-- 로그인 -->
	<select id="login" resultType="userVO">
		SELECT USER_ID, USER_PASSWORD,USER_NAME 
		  FROM USER_ACCOUNT
		 WHERE USER_ID = #{user_id}
		   AND USER_PASSWORD = #{user_password}
	</select>
	<select id="idChk" parameterType="java.lang.String" resultType="int">
		SELECT COUNT(*) FROM USER_ACCOUNT WHERE USER_ID =#{user_id}
	</select>
	
	<insert id="insertUser" parameterType="userVO">
		INSERT INTO USER_ACCOUNT
		 VALUES(
		#{user_id},
		#{user_password},
		#{user_email},
		#{user_name},
		#{user_birth},
		#{user_phone},
		#{user_basic_address},
		#{user_detail_address},
		#{user_img},
		#{user_admin}
		)
	</insert>
	
	<update id="updateUser" parameterType="userVO">
		UPDATE USER_ACCOUNT SET
	   USER_EMAIL = #{user_email},
	   USER_NAME = #{user_name},
	   USER_BIRTH = #{user_birth},
	   USER_PHONE = #{user_phone},
	   USER_BASIC_ADDRESS = #{user_basic_address},
	   USER_DETAIL_ADDRESS = #{user_detail_address},
	   USER_IMG = #{user_img}
	   WHERE USER_ID = #{user_id}
	</update>
	<delete id="deleteUser" parameterType="userVO">
	DELETE FROM USER_ACCOUNT 
	WHERE USER_ID = #{user_id}
	AND USER_PASSWORD = #{user_password}
	
	</delete>
	<select id="selectUser" parameterType="userVO"  resultType="userVO">
	SELECT * FROM USER_ACCOUNT WHERE USER_ID = #{user_id}
	</select>
	
	<!-- 수정 -->
	<!-- Review 후기 부분 -->
	<resultMap id="reviewResult" type="reviewVO">
		<id property="reviewNum" column="ID"/>
		<result property="title" column="TITLE" />
        <result property="writer" column="WRITER" />
        <result property="content" column="CONTENT" />
        <result property="regDate" column="REGDATE" />
        <result property="viewCnt" column="VIEW_CNT" />
        <result property="content_img" column="CONTENT_IMG" />
	</resultMap>
	<!-- 수정 -->
	
	<!-- 수정 -->
	<!-- 등록 -->
	<insert id="reviewInsert">
	<![CDATA[
	INSERT INTO UGLY_BOARD(ID, TITLE, WRITER, CONTENT,REGDATE, VIEW_CNT, CONTENT_IMG) 
	VALUES(IDX_SEQ.NEXTVAL, #{title}, #{writer}, #{content},SYSDATE, 0, #{content_img})
	]]>
	</insert>
	<!-- 수정 -->
	
	<!-- 수정 -->
	<update id="reviewUpdate">
	<![CDATA[
		UPDATE UGLY_BOARD SET TITLE=#{title}, CONTENT=#{content}, CONTENT_IMG=#{content_img} WHERE ID = #{reviewNum}
	]]>
	</update>
	<!-- 수정 -->
	
	<!-- 삭제 -->
	<delete id="reviewDelete">
	<![CDATA[
		DELETE UGLY_BOARD WHERE ID = #{reviewNum}
	]]>
	</delete>
	
	<!-- 내용 보기 -->
	<select id="getReview" resultType="reviewVO" resultMap="reviewResult">
	<![CDATA[
		SELECT * FROM UGLY_BOARD WHERE ID=#{reviewNum}
	]]>
	</select>
	
	<!-- 글 목록 보기  -->
	<select id="getReviewList" resultType="reviewVO" resultMap="reviewResult">
		SELECT * FROM UGLY_BOARD
		WHERE 1 = 1
		<if test="searchCondition == 'TITLE'">
			AND TITLE LIKE '%'||#{searchKeyword}||'%' 
		</if>
		<if test="searchCondition == 'CONTENT'">
			AND CONTENT LIKE '%'||#{searchKeyword}||'%'
		</if> 
		ORDER BY ID DESC
	</select>
	
	<!-- 조회수 증가 -->
	<update id="viewcnt" >
		UPDATE UGLY_BOARD SET VIEW_CNT = VIEW_CNT + 1 WHERE ID = #{reviewNum}
	</update>
	
	<!-- 수정 -->
	<!-- 페이징 -->
	<select id="paging" resultType="reviewVO" resultMap="reviewResult">
	<![CDATA[
	SELECT  ID, TITLE,  WRITER, CONTENT, REGDATE, VIEW_CNT, CONTENT_IMG
    FROM (  SELECT ID,  TITLE,  WRITER, CONTENT, REGDATE, VIEW_CNT, CONTENT_IMG, ROW_NUMBER() 
    OVER(ORDER BY ID DESC) AS RNUM FROM UGLY_BOARD 
    ]]>
    <if test="searchCondition == 'TITLE'">
			WHERE TITLE LIKE '%'||#{searchKeyword}||'%' 
		</if>
		<if test="searchCondition == 'CONTENT'">
			WHERE CONTENT LIKE '%'||#{searchKeyword}||'%'
		</if>
    <![CDATA[
    ) UP 
    WHERE RNUM BETWEEN (#{pageNum}-1)*#{amount}+1 AND #{amount}*#{pageNum}
    ORDER BY ID DESC
	]]>
	</select>
	<!-- 수정 -->
	
	<!-- 총 게시물 개수 -->
	<select id="getlistCount" resultType="int">
	<![CDATA[
		SELECT COUNT(*) FROM UGLY_BOARD WHERE ID > 0
	]]>
		<if test="searchCondition == 'TITLE'">
			AND TITLE LIKE '%'||#{searchKeyword}||'%' 
		</if>
		<if test="searchCondition == 'CONTENT'">
			AND CONTENT LIKE '%'||#{searchKeyword}||'%'
		</if>
	
	</select>
	
	
	
	
	
	
<!-- 	<resultMap id="memResult" type="memberVO">
		<result property="id" column="id" />
        <result property="pwd" column="pwd" />
        <result property="name" column="name" />
        <result property="email" column="email" />
        <result property="joinDate" column="joinDate" />
	</resultMap>  -->
	<!-- 
	<resultMap id="memResult" type="java.util.HashMap">
      <result property="id" column="id" />
      <result property="pwd" column="pwd" />
      <result property="name" column="name" />
      <result property="email" column="email" />
      <result property="joinDate" column="joinDate" />
   </resultMap> -->


	<!-- <select id="selectAllMemberList" resultMap="memResult">
      <![CDATA[
         select * from t_member	order by joinDate desc	 	
      ]]>
	</select>
    
     <insert id="insertMember"  parameterType="memberVO">
		<![CDATA[
		 insert into t_member(id,pwd, name, email)
		 values(#{id}, #{pwd}, #{name}, #{email})
		]]>      
	</insert>
	
   
   <update id="updateMember"  parameterType="memberVO">
     <![CDATA[
	     update t_member
	     set pwd=#{pwd}, name=#{name}, email=#{email}
	     where
	     id=#{id}
      ]]>      
   </update> 
     
   <delete id="deleteMember"  parameterType="String">
	<![CDATA[
	   delete from  t_member
	   where
	   id=#{id}
	]]>      
  </delete>
  <select id="loginById"  resultType="memberVO"   parameterType="memberVO" >
	<![CDATA[
		select * from t_member	
		where id=#{id} and pwd=#{pwd}		
	]]>
  </select> -->
</mapper>